{"version":3,"sources":["BooksAPI.js","components/Book.js","components/BookShelf.js","components/AppTitle.js","components/SearchButton.js","views/Home.js","views/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","handleChange","e","target","value","_this","props","moveBook","react_default","a","createElement","className","style","width","height","backgroundImage","this","imageLinks","thumbnail","onChange","disabled","title","authors","Component","BookShelf","shelfName","map","components_Book","assign","key","AppTitle","appName","SearchButton","react_router_dom","to","Home","_callee","regenerator_default","wrap","_context","prev","next","BookAPI","sent","addBooks","t0","console","log","stop","_context2","Fragment","components_AppTitle","components_BookShelf","currentlyReading","wantToRead","read","components_SearchButton","Search","state","term","onInputChange","results","setState","error","onFormSubmit","preventDefault","_callee2","_context3","_this2","showingBooks","onSubmit","type","placeholder","matchShelf","find","bookSearch","App","filter","_this$state","react_router","exact","path","views_Home","views_Search","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.269ef14e.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n  .then(data => data.books)\r\n\r\n","import React, { Component } from 'react'\r\nimport * as BookAPI from '../BooksAPI'\r\nimport BookShelf from './BookShelf'\r\n\r\nclass Book extends Component {\r\n\r\n  // Get the shelf and book values and pass them up to the home and search components\r\n  handleChange = (e) => {\r\n    const shelf = e.target.value\r\n    const book = this.props\r\n   \r\n    this.props.moveBook(shelf, book)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url('${this.props.imageLinks ? this.props.imageLinks.thumbnail : ''}')`}}></div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select value={this.props.shelf} onChange={this.handleChange}>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">'{this.props.title}'</div>\r\n          <div className=\"book-authors\">{this.props.authors ? this.props.authors : ''}</div>\r\n        </div>\r\n      </li>\r\n \r\n    )\r\n  }\r\n}\r\n\r\nexport default Book","import React, { Component } from 'react'\r\nimport Book from './Book'\r\nimport * as BookAPI from '../BooksAPI'\r\n\r\nclass BookShelf extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{this.props.shelfName}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {this.props.books && this.props.books.map((book) => {\r\n              return <Book key={book.id} {...book} moveBook={this.props.moveBook}/>\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookShelf","import React from 'react'\r\n\r\nfunction AppTitle(props) {\r\n  return (\r\n    <div className=\"list-books-title\">\r\n      <h1>{props.appName}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppTitle\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SearchButton(props) {\r\n  return (\r\n    <div className=\"open-search\">\r\n        <Link\r\n          to='/search'\r\n        >\r\n          <button>Add a book</button>\r\n        </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchButton\r\n\r\n","import React, { Component } from 'react'\r\nimport * as BookAPI from '../BooksAPI'\r\nimport BookShelf from '../components/BookShelf'\r\nimport AppTitle from '../components/AppTitle'\r\nimport SearchButton from '../components/SearchButton'\r\n\r\n\r\nclass Home extends Component {\r\n  \r\n  // Get all books afer component has mounted\r\n  async componentDidMount() {\r\n    try {\r\n      const books = await BookAPI.getAll()\r\n      this.props.addBooks(books);\r\n    }\r\n\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  } \r\n\r\n   // Update book to a new shelf and get updated book list from API to reflect the changes\r\n  moveBook = async (shelf, book) => {\r\n    try {\r\n      const response = await BookAPI.update(book, shelf)\r\n      \r\n      const books = await BookAPI.getAll()\r\n      this.props.addBooks(books);\r\n    }\r\n\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n          <AppTitle appName=\"MyReads App\"/>\r\n          <BookShelf shelfName=\"Currently Reading\" books={this.props.currentlyReading} moveBook={this.moveBook}/>\r\n          <BookShelf shelfName=\"Want to Read\" books={this.props.wantToRead} moveBook={this.moveBook}/>\r\n          <BookShelf shelfName=\"Read\" books={this.props.read} moveBook={this.moveBook}/>\r\n          <SearchButton />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as BookAPI from '../BooksAPI'\r\nimport Book from '../components/Book'\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    term: '',\r\n    books: []\r\n  } \r\n\r\n  // Get all books afer component has mounted\r\n  async componentDidMount() {\r\n    try {\r\n      const books = await BookAPI.getAll()\r\n      this.props.addBooks(books);\r\n    }\r\n\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  } \r\n\r\n  // Update state while typing and send API search request\r\n  onInputChange = async (query) => {\r\n    try {\r\n      this.setState({term: query})\r\n\r\n      const results = await BookAPI.search(this.state.term)\r\n\r\n      if (results.error) {\r\n        this.setState({books: []})\r\n      } else {\r\n        this.setState({books: results})\r\n      }\r\n    }\r\n\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  // Update book to a new shelf and get updated book list from API to reflect the changes\r\n  moveBook = async (shelf, book) => {\r\n    try {\r\n      const response = await BookAPI.update(book, shelf)\r\n    }\r\n\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { term } = this.state\r\n    const { books } = this.props\r\n    \r\n    // Conditional to ensure no results are displayed if the search bar is empty\r\n    const showingBooks = term === ''\r\n    ? []\r\n    : this.state.books\r\n\r\n    return (\r\n      <>\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link \r\n              to=\"/\"\r\n            >\r\n              <button className=\"close-search\">Close</button>\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <input value={this.state.term} type=\"text\" placeholder=\"Search by title or author\" onChange={(e) => this.onInputChange(e.target.value)} />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {/* This makes sure that if a book returned from the search results is already in the app, the correct shelf option is preselected */}\r\n            {showingBooks.map((book) => {\r\n              const matchShelf = this.props.books.find((bookSearch) => {\r\n                return bookSearch.id === book.id\r\n              })\r\n\r\n              if(matchShelf) {\r\n                book.shelf = matchShelf.shelf\r\n              } else {\r\n                book.shelf = 'none'\r\n              }\r\n\r\n              return (\r\n                  <Book key={book.id} {...book} moveBook={this.moveBook}\r\n                  />\r\n                )\r\n            })} \r\n          </ol>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport './App.css'\r\nimport * as BookAPI from './BooksAPI'\r\nimport Home from './views/Home'\r\nimport Search from './views/Search'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    books: [],\r\n    currentlyReading: [],\r\n    wantToRead: [],\r\n    read: []\r\n  }\r\n\r\n  // Main function that sets the state after each getAll API call\r\n  addBooks = (books) => {\r\n    const currentlyReading = books.filter(book => book.shelf === 'currentlyReading')\r\n    const wantToRead = books.filter(book => book.shelf === 'wantToRead')\r\n    const read = books.filter(book => book.shelf === 'read')\r\n\r\n    this.setState({books, currentlyReading, wantToRead, read})\r\n  }\r\n\r\n  render() {\r\n    const { books, currentlyReading, wantToRead, read} = this.state\r\n\r\n    return (\r\n      <>\r\n          <Route exact path='/'>\r\n            <Home books={books} currentlyReading={currentlyReading} wantToRead={wantToRead} read={read} addBooks={this.addBooks}/>\r\n          </Route> \r\n          <Route exact path='/search'>\r\n            <Search books={books} currentlyReading={currentlyReading} wantToRead={wantToRead} read={read} addBooks={this.addBooks}/>\r\n          </Route>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n  <App />\r\n</BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}